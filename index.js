const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const cors = require('cors');

const token = '6402877699:AAE4gkptl-Eam4o8lo7Yuu-Lze-1Q6JpBcc';
const webAppUrl = 'https://ephemeral-kleicha-d732de.netlify.app';

const bot = new TelegramBot(token, {polling: true});
const app = express();

app.use(express.json());
app.use(cors());

bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    const groupId = '-1002081140106';


    if(text === '/start') {
        await bot.sendMessage(chatId,
            'üëã <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ Airvac</b>' +
            '\n\nüõí –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É - /shop',
            
            {
                parse_mode: 'HTML'
            })
    }

    if(text === '/shop') {
        await bot.sendMessage(chatId,
            '–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è',

            {
                parse_mode: 'HTML',
                reply_markup: {
                    keyboard: [
                        [{text: '–ú–∞–≥–∞–∑–∏–Ω', web_app: {url: webAppUrl}}]
                    ],
                    resize_keyboard: true
                }
            })
    }


    if(msg?.web_app_data?.data) {
        const data = JSON.parse(msg?.web_app_data?.data)
        console.log(data)
        if (data?.deliveryMethod === 'delivery') {
            try {
                await bot.sendMessage(chatId,'‚úÖ <b>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç.</b>', {
                    parse_mode: 'HTML'
                });
                await bot.sendMessage(chatId,`
                    \nüõí <b>–í–∞—à –∑–∞–∫–∞–∑: </b>${data?.cartList.map(item => `\n${item.name} - (${item.count} —à—Ç.)`)}
                    \nüì¶ <b>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: </b>\n–ò–º—è: ${data?.userName}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${data?.userPhone?.value}\n–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${data?.userStreet?.value}, ${data?.userAddress}\n–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: ${data?.userDelivery?.value}
                    \nüí∞ <b>–°—É–º–º–∞: </b>${data?.totalSum} —Ä—É–±
                `, {
                    parse_mode: 'HTML'
                });
                await bot.sendMessage(groupId,`‚úÖ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ ${data?.userName}</b>`, {
                    parse_mode: 'HTML'
                })
                await bot.sendMessage(groupId,`
                    \nüõí <b>–ó–∞–∫–∞–∑: </b>${data?.cartList.map(item => `\n${item.name} - (${item.count} —à—Ç.)`)}
                    \nüì¶ <b>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: </b>\n–ò–º—è: ${data?.userName}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${data?.userPhone?.value}\n–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${data?.userStreet?.value}, ${data?.userAddress}\n–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: ${data?.userDelivery?.value}
                    \nüí∞ <b>–°—É–º–º–∞: </b>${data?.totalSum} —Ä—É–±
                `, {
                    parse_mode: 'HTML'
                });
                setTimeout( async () => {
                    await bot.sendMessage(chatId,'–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞');
                }, 3000)
            } catch (e) {
                console.log(e)
            }
        } else {
            try {
                await bot.sendMessage(chatId,'‚úÖ <b>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç.</b>', {
                    parse_mode: 'HTML'
                })
                await bot.sendMessage(chatId,`
                \nüõí <b>–í–∞—à –∑–∞–∫–∞–∑: </b>${data?.cartList.map(item => `\n${item.name} - (${item.count} —à—Ç.)`)}
                    \nüì¶ <b>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: </b>\n–ò–º—è: ${data?.userName}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${data?.userPhone.value}\n–°–∞–º–æ–≤—ã–≤–æ–∑ –ø–æ –∞–¥—Ä–µ—Å—É: –ú–∏–Ω—Å–∫, –£—Ä—É—á—Å–∫–∞—è, 23–ë
                    \nüí∞ <b>–°—É–º–º–∞: </b>${data?.totalSum} —Ä—É–±
                `, {
                    parse_mode: 'HTML'
                });
                await bot.sendMessage(groupId,`‚úÖ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–º–æ–≤—ã–≤–æ–∑ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ ${data?.userName}</b>`, {
                    parse_mode: 'HTML'
                })
                await bot.sendMessage(groupId,`
                \nüõí <b>–ó–∞–∫–∞–∑: </b>${data?.cartList.map(item => `\n${item.name} - (${item.count} —à—Ç.)`)}
                    \nüì¶ <b>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: </b>\n–ò–º—è: ${data?.userName}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${data?.userPhone.value}\n–°–∞–º–æ–≤—ã–≤–æ–∑ –ø–æ –∞–¥—Ä–µ—Å—É: –ú–∏–Ω—Å–∫, –£—Ä—É—á—Å–∫–∞—è, 23–ë
                    \nüí∞ <b>–°—É–º–º–∞: </b>${data?.totalSum} —Ä—É–±
                `, {
                    parse_mode: 'HTML'
                });
                setTimeout( async () => {
                    await bot.sendMessage(chatId,'–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞');
                }, 3000)
            } catch (e) {
                console.log(e)
            }
        }
    }
});
